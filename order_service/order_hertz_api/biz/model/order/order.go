// Code generated by thriftgo (0.3.18). DO NOT EDIT.

package order

import (
	"context"
	"fmt"
)

type OrderRequest struct {
	OrderId int64 `thrift:"orderId,1" json:"orderId" query:"id"`
}

func NewOrderRequest() *OrderRequest {
	return &OrderRequest{}
}

func (p *OrderRequest) InitDefault() {
}

func (p *OrderRequest) GetOrderId() (v int64) {
	return p.OrderId
}

func (p *OrderRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OrderRequest(%+v)", *p)
}

type UserOrderRequest struct {
	UserId int64 `thrift:"userId,1" json:"userId" query:"userId"`
	Page   int32 `thrift:"page,2" json:"page" query:"page"`
	Size   int32 `thrift:"size,3" json:"size" query:"size"`
}

func NewUserOrderRequest() *UserOrderRequest {
	return &UserOrderRequest{}
}

func (p *UserOrderRequest) InitDefault() {
}

func (p *UserOrderRequest) GetUserId() (v int64) {
	return p.UserId
}

func (p *UserOrderRequest) GetPage() (v int32) {
	return p.Page
}

func (p *UserOrderRequest) GetSize() (v int32) {
	return p.Size
}

func (p *UserOrderRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UserOrderRequest(%+v)", *p)
}

type CreateOrderRequest struct {
	UserId     int64    `thrift:"userId,1" form:"userId" json:"userId" query:"userId"`
	GoodsId    int64    `thrift:"goodsId,2" form:"goodsId" json:"goodsId" query:"goodsId"`
	GoodsCount int32    `thrift:"goods_count,3" form:"goods_count" json:"goods_count" query:"goods_count"`
	Cost       int32    `thrift:"cost,4" form:"cost" json:"cost" query:"cost"`
	Address    *Address `thrift:"address,5" form:"address" json:"address" query:"address"`
}

func NewCreateOrderRequest() *CreateOrderRequest {
	return &CreateOrderRequest{}
}

func (p *CreateOrderRequest) InitDefault() {
}

func (p *CreateOrderRequest) GetUserId() (v int64) {
	return p.UserId
}

func (p *CreateOrderRequest) GetGoodsId() (v int64) {
	return p.GoodsId
}

func (p *CreateOrderRequest) GetGoodsCount() (v int32) {
	return p.GoodsCount
}

func (p *CreateOrderRequest) GetCost() (v int32) {
	return p.Cost
}

var CreateOrderRequest_Address_DEFAULT *Address

func (p *CreateOrderRequest) GetAddress() (v *Address) {
	if !p.IsSetAddress() {
		return CreateOrderRequest_Address_DEFAULT
	}
	return p.Address
}

func (p *CreateOrderRequest) IsSetAddress() bool {
	return p.Address != nil
}

func (p *CreateOrderRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateOrderRequest(%+v)", *p)
}

type UpdateOrderRequest struct {
	OrderId    int64    `thrift:"orderId,1" form:"orderId" json:"orderId" query:"orderId"`
	Status     int32    `thrift:"status,2" form:"status" json:"status" query:"status"`
	GoodsCount int32    `thrift:"goods_count,3" form:"goods_count" json:"goods_count" query:"goods_count"`
	Cost       int32    `thrift:"cost,4" form:"cost" json:"cost" query:"cost"`
	Address    *Address `thrift:"address,5" form:"address" json:"address" query:"address"`
}

func NewUpdateOrderRequest() *UpdateOrderRequest {
	return &UpdateOrderRequest{}
}

func (p *UpdateOrderRequest) InitDefault() {
}

func (p *UpdateOrderRequest) GetOrderId() (v int64) {
	return p.OrderId
}

func (p *UpdateOrderRequest) GetStatus() (v int32) {
	return p.Status
}

func (p *UpdateOrderRequest) GetGoodsCount() (v int32) {
	return p.GoodsCount
}

func (p *UpdateOrderRequest) GetCost() (v int32) {
	return p.Cost
}

var UpdateOrderRequest_Address_DEFAULT *Address

func (p *UpdateOrderRequest) GetAddress() (v *Address) {
	if !p.IsSetAddress() {
		return UpdateOrderRequest_Address_DEFAULT
	}
	return p.Address
}

func (p *UpdateOrderRequest) IsSetAddress() bool {
	return p.Address != nil
}

func (p *UpdateOrderRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UpdateOrderRequest(%+v)", *p)
}

type OrderStatusRequest struct {
	OrderId int64 `thrift:"orderId,1" form:"orderId" json:"orderId" query:"orderId"`
	Status  int32 `thrift:"status,2" form:"status" json:"status" query:"status"`
}

func NewOrderStatusRequest() *OrderStatusRequest {
	return &OrderStatusRequest{}
}

func (p *OrderStatusRequest) InitDefault() {
}

func (p *OrderStatusRequest) GetOrderId() (v int64) {
	return p.OrderId
}

func (p *OrderStatusRequest) GetStatus() (v int32) {
	return p.Status
}

func (p *OrderStatusRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OrderStatusRequest(%+v)", *p)
}

type OrderAddressRequest struct {
	OrderId int64    `thrift:"orderId,1" form:"orderId" json:"orderId" query:"orderId"`
	Address *Address `thrift:"address,2" form:"address" json:"address" query:"address"`
}

func NewOrderAddressRequest() *OrderAddressRequest {
	return &OrderAddressRequest{}
}

func (p *OrderAddressRequest) InitDefault() {
}

func (p *OrderAddressRequest) GetOrderId() (v int64) {
	return p.OrderId
}

var OrderAddressRequest_Address_DEFAULT *Address

func (p *OrderAddressRequest) GetAddress() (v *Address) {
	if !p.IsSetAddress() {
		return OrderAddressRequest_Address_DEFAULT
	}
	return p.Address
}

func (p *OrderAddressRequest) IsSetAddress() bool {
	return p.Address != nil
}

func (p *OrderAddressRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OrderAddressRequest(%+v)", *p)
}

type Address struct {
	Name    string `thrift:"name,1" form:"name" json:"name" query:"name"`
	Phone   string `thrift:"phone,2" form:"phone" json:"phone" query:"phone"`
	Address string `thrift:"address,3" form:"address" json:"address" query:"address"`
}

func NewAddress() *Address {
	return &Address{}
}

func (p *Address) InitDefault() {
}

func (p *Address) GetName() (v string) {
	return p.Name
}

func (p *Address) GetPhone() (v string) {
	return p.Phone
}

func (p *Address) GetAddress() (v string) {
	return p.Address
}

func (p *Address) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Address(%+v)", *p)
}

type Order struct {
	ID         int64    `thrift:"id,1" form:"id" json:"id" query:"id"`
	UserId     int64    `thrift:"userId,2" form:"userId" json:"userId" query:"userId"`
	GoodsId    int64    `thrift:"goodsId,3" form:"goodsId" json:"goodsId" query:"goodsId"`
	Status     int32    `thrift:"status,4" form:"status" json:"status" query:"status"`
	CreateTime int64    `thrift:"createTime,5" form:"createTime" json:"createTime" query:"createTime"`
	Address    *Address `thrift:"address,6" form:"address" json:"address" query:"address"`
	GoodsCount int32    `thrift:"goods_count,7" form:"goods_count" json:"goods_count" query:"goods_count"`
	Cost       int32    `thrift:"cost,8" form:"cost" json:"cost" query:"cost"`
}

func NewOrder() *Order {
	return &Order{}
}

func (p *Order) InitDefault() {
}

func (p *Order) GetID() (v int64) {
	return p.ID
}

func (p *Order) GetUserId() (v int64) {
	return p.UserId
}

func (p *Order) GetGoodsId() (v int64) {
	return p.GoodsId
}

func (p *Order) GetStatus() (v int32) {
	return p.Status
}

func (p *Order) GetCreateTime() (v int64) {
	return p.CreateTime
}

var Order_Address_DEFAULT *Address

func (p *Order) GetAddress() (v *Address) {
	if !p.IsSetAddress() {
		return Order_Address_DEFAULT
	}
	return p.Address
}

func (p *Order) GetGoodsCount() (v int32) {
	return p.GoodsCount
}

func (p *Order) GetCost() (v int32) {
	return p.Cost
}

func (p *Order) IsSetAddress() bool {
	return p.Address != nil
}

func (p *Order) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Order(%+v)", *p)
}

type OrderResponse struct {
	Order *Order `thrift:"order,1" form:"order" json:"order" query:"order"`
}

func NewOrderResponse() *OrderResponse {
	return &OrderResponse{}
}

func (p *OrderResponse) InitDefault() {
}

var OrderResponse_Order_DEFAULT *Order

func (p *OrderResponse) GetOrder() (v *Order) {
	if !p.IsSetOrder() {
		return OrderResponse_Order_DEFAULT
	}
	return p.Order
}

func (p *OrderResponse) IsSetOrder() bool {
	return p.Order != nil
}

func (p *OrderResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OrderResponse(%+v)", *p)
}

type OrderListResponse struct {
	Orders []*Order `thrift:"orders,1" form:"orders" json:"orders" query:"orders"`
}

func NewOrderListResponse() *OrderListResponse {
	return &OrderListResponse{}
}

func (p *OrderListResponse) InitDefault() {
}

func (p *OrderListResponse) GetOrders() (v []*Order) {
	return p.Orders
}

func (p *OrderListResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OrderListResponse(%+v)", *p)
}

type BaseResponse struct {
	Code    int32  `thrift:"code,1" form:"code" json:"code" query:"code"`
	Message string `thrift:"message,2" form:"message" json:"message" query:"message"`
}

func NewBaseResponse() *BaseResponse {
	return &BaseResponse{}
}

func (p *BaseResponse) InitDefault() {
}

func (p *BaseResponse) GetCode() (v int32) {
	return p.Code
}

func (p *BaseResponse) GetMessage() (v string) {
	return p.Message
}

func (p *BaseResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("BaseResponse(%+v)", *p)
}

type OrderService interface {
	CreateOrder(ctx context.Context, req *CreateOrderRequest) (r *BaseResponse, err error)

	GetOrder(ctx context.Context, req *OrderRequest) (r *OrderResponse, err error)

	GetUserOrders(ctx context.Context, req *UserOrderRequest) (r *OrderListResponse, err error)

	UpdateOrder(ctx context.Context, req *UpdateOrderRequest) (r *BaseResponse, err error)

	UpdateOrderStatus(ctx context.Context, req *OrderStatusRequest) (r *BaseResponse, err error)

	UpdateOrderAddress(ctx context.Context, req *OrderAddressRequest) (r *BaseResponse, err error)
}
